#Computer Systems Lab 2 - Dylan, Marisa, Solomon

Write a C program to simulate the register contents of a MIPS machine running an abbreviated instruction set
-should be cycle-accurate with respect to register contents
-simualtes a machine consisting of add, sub, addi, mul, lw, sw, beq, instructions only
-will need to provide some error detection wrt the assembly program input

 parser(char *line){
  inst *newInst;
  /*parse by whitespace and create an array of strings/numbers
   if(add sub mul) --> contains opcode, rs, rt, rd
     if(arg1 = 0 - 31) newInst->rd = arg1  (are specific register numbers invalid for rs rt rd)
     else return invalid registor error
     if(arg2 = 0 - 31) newInst->rs = arg2
     else return invalid registor error
     if(arg3 = 0 - 31) newInst->rt = arg3
     else return invalid registor error
   if(lw sw)
     if(arg1 = 0 - 31) newInst->rt = arg1
     else return invalid registor error
     if(arg2 is smaller than biggest 16 bit num and right mem step size) newInst->Imm = arg2
     else return too large immediate field or memory misalignment error
     if(arg3 = 0 - 31) newInst->rs
     else return invalid registor error
   if(add beq)
     if(arg1 = 0 - 31) newInst0>rt = arg1
     else return invalid registor error
     if(arg2 = 0 - 31) newInst->rs = arg2
     else return invalid registor error
     if(addi && arg3 is smaller then bigest 16 bit num) newInst->Imm = arg3
     else return too large immediate field error
     if(beq && arg3 is right step size)
       if(arg3 is smaller than bigest 16 bit num) newInst->Imm = arg3
       else return too large immediate field error
     else return memory misalignment error
   else return illegal opco
